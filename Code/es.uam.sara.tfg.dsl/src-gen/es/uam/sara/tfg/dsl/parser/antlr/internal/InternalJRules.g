/*
 * generated by Xtext 2.10.0
 */
grammar InternalJRules;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package es.uam.sara.tfg.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package es.uam.sara.tfg.dsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import es.uam.sara.tfg.dsl.services.JRulesGrammarAccess;

}

@parser::members {

 	private JRulesGrammarAccess grammarAccess;

    public InternalJRulesParser(TokenStream input, JRulesGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "RuleSet";
   	}

   	@Override
   	protected JRulesGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleRuleSet
entryRuleRuleSet returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleSetRule()); }
	iv_ruleRuleSet=ruleRuleSet
	{ $current=$iv_ruleRuleSet.current; }
	EOF;

// Rule RuleSet
ruleRuleSet returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Projects'
		{
			newLeafNode(otherlv_0, grammarAccess.getRuleSetAccess().getProjectsKeyword_0());
		}
		otherlv_1='Name:'
		{
			newLeafNode(otherlv_1, grammarAccess.getRuleSetAccess().getNameKeyword_1());
		}
		(
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRuleSetAccess().getProjectNameEStringParserRuleCall_2_0_0_0());
						}
						lv_ProjectName_2_0=ruleEString
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRuleSetRule());
							}
							add(
								$current,
								"ProjectName",
								lv_ProjectName_2_0,
								"es.uam.sara.tfg.dsl.JRules.EString");
							afterParserOrEnumRuleCall();
						}
					)
				)
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getRuleSetAccess().getCommaKeyword_2_0_1_0());
					}
					(
						(
							{
								newCompositeNode(grammarAccess.getRuleSetAccess().getProjectNameEStringParserRuleCall_2_0_1_1_0());
							}
							lv_ProjectName_4_0=ruleEString
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getRuleSetRule());
								}
								add(
									$current,
									"ProjectName",
									lv_ProjectName_4_0,
									"es.uam.sara.tfg.dsl.JRules.EString");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)*
			)
			    |
			otherlv_5='*'
			{
				newLeafNode(otherlv_5, grammarAccess.getRuleSetAccess().getAsteriskKeyword_2_1());
			}
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleSetAccess().getSentencesSentenceParserRuleCall_3_0());
				}
				lv_sentences_6_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleSetRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_6_0,
						"es.uam.sara.tfg.dsl.JRules.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleSetAccess().getSentencesSentenceParserRuleCall_4_0());
				}
				lv_sentences_7_0=ruleSentence
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleSetRule());
					}
					add(
						$current,
						"sentences",
						lv_sentences_7_0,
						"es.uam.sara.tfg.dsl.JRules.Sentence");
					afterParserOrEnumRuleCall();
				}
			)
		)*
	)
;

// Entry rule entryRuleSentence
entryRuleSentence returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSentenceRule()); }
	iv_ruleSentence=ruleSentence
	{ $current=$iv_ruleSentence.current; }
	EOF;

// Rule Sentence
ruleSentence returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getSentenceAccess().getVariableParserRuleCall_0_0());
			}
			this_Variable_0=ruleVariable
			{
				$current = $this_Variable_0.current;
				afterParserOrEnumRuleCall();
			}
			    |
			{
				newCompositeNode(grammarAccess.getSentenceAccess().getRuleParserRuleCall_0_1());
			}
			this_Rule_1=ruleRule
			{
				$current = $this_Rule_1.current;
				afterParserOrEnumRuleCall();
			}
		)
		otherlv_2=';'
		{
			newLeafNode(otherlv_2, grammarAccess.getSentenceAccess().getSemicolonKeyword_1());
		}
	)
;

// Entry rule entryRuleVariable
entryRuleVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableRule()); }
	iv_ruleVariable=ruleVariable
	{ $current=$iv_ruleVariable.current; }
	EOF;

// Rule Variable
ruleVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getNameEStringParserRuleCall_0_0());
				}
				lv_name_0_0=ruleEString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"name",
						lv_name_0_0,
						"es.uam.sara.tfg.dsl.JRules.EString");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1=':'
		{
			newLeafNode(otherlv_1, grammarAccess.getVariableAccess().getColonKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getVariableAccess().getElementElementEnumRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getVariableRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"es.uam.sara.tfg.dsl.JRules.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='from'
			{
				newLeafNode(otherlv_3, grammarAccess.getVariableAccess().getFromKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVariableAccess().getFromVariableCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='in'
			{
				newLeafNode(otherlv_5, grammarAccess.getVariableAccess().getInKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getVariableRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getVariableAccess().getInVariableCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getVariableAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getVariableRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getVariableAccess().getInVariableCrossReference_4_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_9='using'
			{
				newLeafNode(otherlv_9, grammarAccess.getVariableAccess().getUsingKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getUsingVariableSubtypeParserRuleCall_5_1_0());
					}
					lv_using_10_0=ruleVariableSubtype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						add(
							$current,
							"using",
							lv_using_10_0,
							"es.uam.sara.tfg.dsl.JRules.VariableSubtype");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getVariableAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getVariableAccess().getUsingVariableSubtypeParserRuleCall_5_2_1_0());
						}
						lv_using_12_0=ruleVariableSubtype
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getVariableRule());
							}
							add(
								$current,
								"using",
								lv_using_12_0,
								"es.uam.sara.tfg.dsl.JRules.VariableSubtype");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_13='satisfy'
			{
				newLeafNode(otherlv_13, grammarAccess.getVariableAccess().getSatisfyKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableAccess().getSatisfyOrParserRuleCall_6_1_0());
					}
					lv_satisfy_14_0=ruleOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableRule());
						}
						set(
							$current,
							"satisfy",
							lv_satisfy_14_0,
							"es.uam.sara.tfg.dsl.JRules.Or");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleRule
entryRuleRule returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRuleRule()); }
	iv_ruleRule=ruleRule
	{ $current=$iv_ruleRule.current; }
	EOF;

// Rule Rule
ruleRule returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_no_0_0='no'
				{
					newLeafNode(lv_no_0_0, grammarAccess.getRuleAccess().getNoNoKeyword_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getRuleRule());
					}
					setWithLastConsumed($current, "no", true, "no");
				}
			)
		)?
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getQuantifierQuantifierEnumRuleCall_1_0());
				}
				lv_quantifier_1_0=ruleQuantifier
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"quantifier",
						lv_quantifier_1_0,
						"es.uam.sara.tfg.dsl.JRules.Quantifier");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getRuleAccess().getElementElementEnumRuleCall_2_0());
				}
				lv_element_2_0=ruleElement
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getRuleRule());
					}
					set(
						$current,
						"element",
						lv_element_2_0,
						"es.uam.sara.tfg.dsl.JRules.Element");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='from'
			{
				newLeafNode(otherlv_3, grammarAccess.getRuleAccess().getFromKeyword_3_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRuleAccess().getFromVariableCrossReference_3_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_5='in'
			{
				newLeafNode(otherlv_5, grammarAccess.getRuleAccess().getInKeyword_4_0());
			}
			(
				(
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getRuleRule());
						}
					}
					{
						newCompositeNode(grammarAccess.getRuleAccess().getInVariableCrossReference_4_1_0());
					}
					ruleEString
					{
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_7=','
				{
					newLeafNode(otherlv_7, grammarAccess.getRuleAccess().getCommaKeyword_4_2_0());
				}
				(
					(
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getRuleRule());
							}
						}
						{
							newCompositeNode(grammarAccess.getRuleAccess().getInVariableCrossReference_4_2_1_0());
						}
						ruleEString
						{
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_9='using'
			{
				newLeafNode(otherlv_9, grammarAccess.getRuleAccess().getUsingKeyword_5_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getUsingVariableSubtypeParserRuleCall_5_1_0());
					}
					lv_using_10_0=ruleVariableSubtype
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						add(
							$current,
							"using",
							lv_using_10_0,
							"es.uam.sara.tfg.dsl.JRules.VariableSubtype");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_11=','
				{
					newLeafNode(otherlv_11, grammarAccess.getRuleAccess().getCommaKeyword_5_2_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRuleAccess().getUsingVariableSubtypeParserRuleCall_5_2_1_0());
						}
						lv_using_12_0=ruleVariableSubtype
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRuleRule());
							}
							add(
								$current,
								"using",
								lv_using_12_0,
								"es.uam.sara.tfg.dsl.JRules.VariableSubtype");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		(
			otherlv_13='which'
			{
				newLeafNode(otherlv_13, grammarAccess.getRuleAccess().getWhichKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getFilterOrParserRuleCall_6_1_0());
					}
					lv_filter_14_0=ruleOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						set(
							$current,
							"filter",
							lv_filter_14_0,
							"es.uam.sara.tfg.dsl.JRules.Or");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		(
			otherlv_15='satisfy'
			{
				newLeafNode(otherlv_15, grammarAccess.getRuleAccess().getSatisfyKeyword_7_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRuleAccess().getSatisfyOrParserRuleCall_7_1_0());
					}
					lv_satisfy_16_0=ruleOr
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRuleRule());
						}
						set(
							$current,
							"satisfy",
							lv_satisfy_16_0,
							"es.uam.sara.tfg.dsl.JRules.Or");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleOr
entryRuleOr returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getOrRule()); }
	iv_ruleOr=ruleOr
	{ $current=$iv_ruleOr.current; }
	EOF;

// Rule Or
ruleOr returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getOrAccess().getOpAndParserRuleCall_0_0());
				}
				lv_op_0_0=ruleAnd
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getOrRule());
					}
					add(
						$current,
						"op",
						lv_op_0_0,
						"es.uam.sara.tfg.dsl.JRules.And");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='or'
			{
				newLeafNode(otherlv_1, grammarAccess.getOrAccess().getOrKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getOrAccess().getOpAndParserRuleCall_1_1_0());
					}
					lv_op_2_0=ruleAnd
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getOrRule());
						}
						add(
							$current,
							"op",
							lv_op_2_0,
							"es.uam.sara.tfg.dsl.JRules.And");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRuleAnd
entryRuleAnd returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAndRule()); }
	iv_ruleAnd=ruleAnd
	{ $current=$iv_ruleAnd.current; }
	EOF;

// Rule And
ruleAnd returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getAndAccess().getOpPrimaryOpParserRuleCall_0_0());
				}
				lv_op_0_0=rulePrimaryOp
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAndRule());
					}
					add(
						$current,
						"op",
						lv_op_0_0,
						"es.uam.sara.tfg.dsl.JRules.PrimaryOp");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='and'
			{
				newLeafNode(otherlv_1, grammarAccess.getAndAccess().getAndKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAndAccess().getOpPrimaryOpParserRuleCall_1_1_0());
					}
					lv_op_2_0=rulePrimaryOp
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAndRule());
						}
						add(
							$current,
							"op",
							lv_op_2_0,
							"es.uam.sara.tfg.dsl.JRules.PrimaryOp");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
	)
;

// Entry rule entryRulePrimaryOp
entryRulePrimaryOp returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPrimaryOpRule()); }
	iv_rulePrimaryOp=rulePrimaryOp
	{ $current=$iv_rulePrimaryOp.current; }
	EOF;

// Rule PrimaryOp
rulePrimaryOp returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='('
			{
				newLeafNode(otherlv_0, grammarAccess.getPrimaryOpAccess().getLeftParenthesisKeyword_0_0());
			}
			{
				newCompositeNode(grammarAccess.getPrimaryOpAccess().getOrParserRuleCall_0_1());
			}
			this_Or_1=ruleOr
			{
				$current = $this_Or_1.current;
				afterParserOrEnumRuleCall();
			}
			otherlv_2=')'
			{
				newLeafNode(otherlv_2, grammarAccess.getPrimaryOpAccess().getRightParenthesisKeyword_0_2());
			}
		)
		    |
		{
			newCompositeNode(grammarAccess.getPrimaryOpAccess().getPropertyLiteralParserRuleCall_1());
		}
		this_PropertyLiteral_3=rulePropertyLiteral
		{
			$current = $this_PropertyLiteral_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRulePropertyLiteral
entryRulePropertyLiteral returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyLiteralRule()); }
	iv_rulePropertyLiteral=rulePropertyLiteral
	{ $current=$iv_rulePropertyLiteral.current; }
	EOF;

// Rule PropertyLiteral
rulePropertyLiteral returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getPropertyLiteralAccess().getPropertyPropertyParserRuleCall_0());
			}
			lv_property_0_0=ruleProperty
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getPropertyLiteralRule());
				}
				set(
					$current,
					"property",
					lv_property_0_0,
					"es.uam.sara.tfg.dsl.JRules.Property");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	iv_ruleProperty=ruleProperty
	{ $current=$iv_ruleProperty.current; }
	EOF;

// Rule Property
ruleProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIsImplementedParserRuleCall_0());
		}
		this_IsImplemented_0=ruleIsImplemented
		{
			$current = $this_IsImplemented_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIsSuperInterfaceParserRuleCall_1());
		}
		this_IsSuperInterface_1=ruleIsSuperInterface
		{
			$current = $this_IsSuperInterface_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIsSuperClassParserRuleCall_2());
		}
		this_IsSuperClass_2=ruleIsSuperClass
		{
			$current = $this_IsSuperClass_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIsSubClassParserRuleCall_3());
		}
		this_IsSubClass_3=ruleIsSubClass
		{
			$current = $this_IsSubClass_3.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getImplementsParserRuleCall_4());
		}
		this_Implements_4=ruleImplements
		{
			$current = $this_Implements_4.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getExtendsParserRuleCall_5());
		}
		this_Extends_5=ruleExtends
		{
			$current = $this_Extends_5.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getTamanioParserRuleCall_6());
		}
		this_Tamanio_6=ruleTamanio
		{
			$current = $this_Tamanio_6.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getParameterParserRuleCall_7());
		}
		this_Parameter_7=ruleParameter
		{
			$current = $this_Parameter_7.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getConstructorParserRuleCall_8());
		}
		this_Constructor_8=ruleConstructor
		{
			$current = $this_Constructor_8.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getReturnParserRuleCall_9());
		}
		this_Return_9=ruleReturn
		{
			$current = $this_Return_9.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getAttributeTypeParserRuleCall_10());
		}
		this_AttributeType_10=ruleAttributeType
		{
			$current = $this_AttributeType_10.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getInitializeParserRuleCall_11());
		}
		this_Initialize_11=ruleInitialize
		{
			$current = $this_Initialize_11.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getEmptyParserRuleCall_12());
		}
		this_Empty_12=ruleEmpty
		{
			$current = $this_Empty_12.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getIsGenericParserRuleCall_13());
		}
		this_IsGeneric_13=ruleIsGeneric
		{
			$current = $this_IsGeneric_13.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getNameOperationParserRuleCall_14());
		}
		this_NameOperation_14=ruleNameOperation
		{
			$current = $this_NameOperation_14.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getNameTypeParserRuleCall_15());
		}
		this_NameType_15=ruleNameType
		{
			$current = $this_NameType_15.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getContainsParserRuleCall_16());
		}
		this_Contains_16=ruleContains
		{
			$current = $this_Contains_16.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getJavaDocParserRuleCall_17());
		}
		this_JavaDoc_17=ruleJavaDoc
		{
			$current = $this_JavaDoc_17.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getPropertyAccess().getModifiersParserRuleCall_18());
		}
		this_Modifiers_18=ruleModifiers
		{
			$current = $this_Modifiers_18.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleIsImplemented
entryRuleIsImplemented returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsImplementedRule()); }
	iv_ruleIsImplemented=ruleIsImplemented
	{ $current=$iv_ruleIsImplemented.current; }
	EOF;

// Rule IsImplemented
ruleIsImplemented returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='is'
			{
				newLeafNode(otherlv_0, grammarAccess.getIsImplementedAccess().getIsKeyword_0_0());
			}
			    |
			otherlv_1='are'
			{
				newLeafNode(otherlv_1, grammarAccess.getIsImplementedAccess().getAreKeyword_0_1());
			}
		)
		(
			(
				lv_no_2_0='not'
				{
					newLeafNode(lv_no_2_0, grammarAccess.getIsImplementedAccess().getNoNotKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsImplementedRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_3='implemented'
		{
			newLeafNode(otherlv_3, grammarAccess.getIsImplementedAccess().getImplementedKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsImplementedAccess().getValoresRangoNamesParserRuleCall_3_0());
				}
				lv_valores_4_0=ruleRangoNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsImplementedRule());
					}
					set(
						$current,
						"valores",
						lv_valores_4_0,
						"es.uam.sara.tfg.dsl.JRules.RangoNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIsSuperInterface
entryRuleIsSuperInterface returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsSuperInterfaceRule()); }
	iv_ruleIsSuperInterface=ruleIsSuperInterface
	{ $current=$iv_ruleIsSuperInterface.current; }
	EOF;

// Rule IsSuperInterface
ruleIsSuperInterface returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='is'
			{
				newLeafNode(otherlv_0, grammarAccess.getIsSuperInterfaceAccess().getIsKeyword_0_0());
			}
			    |
			otherlv_1='are'
			{
				newLeafNode(otherlv_1, grammarAccess.getIsSuperInterfaceAccess().getAreKeyword_0_1());
			}
		)
		(
			(
				lv_no_2_0='not'
				{
					newLeafNode(lv_no_2_0, grammarAccess.getIsSuperInterfaceAccess().getNoNotKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsSuperInterfaceRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_3='superinterface'
		{
			newLeafNode(otherlv_3, grammarAccess.getIsSuperInterfaceAccess().getSuperinterfaceKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsSuperInterfaceAccess().getValoresRangoNamesParserRuleCall_3_0());
				}
				lv_valores_4_0=ruleRangoNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsSuperInterfaceRule());
					}
					set(
						$current,
						"valores",
						lv_valores_4_0,
						"es.uam.sara.tfg.dsl.JRules.RangoNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIsSuperClass
entryRuleIsSuperClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsSuperClassRule()); }
	iv_ruleIsSuperClass=ruleIsSuperClass
	{ $current=$iv_ruleIsSuperClass.current; }
	EOF;

// Rule IsSuperClass
ruleIsSuperClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='is'
			{
				newLeafNode(otherlv_0, grammarAccess.getIsSuperClassAccess().getIsKeyword_0_0());
			}
			    |
			otherlv_1='are'
			{
				newLeafNode(otherlv_1, grammarAccess.getIsSuperClassAccess().getAreKeyword_0_1());
			}
		)
		(
			(
				lv_no_2_0='not'
				{
					newLeafNode(lv_no_2_0, grammarAccess.getIsSuperClassAccess().getNoNotKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsSuperClassRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_3='superclass'
		{
			newLeafNode(otherlv_3, grammarAccess.getIsSuperClassAccess().getSuperclassKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIsSuperClassAccess().getValoresRangoNamesParserRuleCall_3_0());
				}
				lv_valores_4_0=ruleRangoNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIsSuperClassRule());
					}
					set(
						$current,
						"valores",
						lv_valores_4_0,
						"es.uam.sara.tfg.dsl.JRules.RangoNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleIsSubClass
entryRuleIsSubClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsSubClassRule()); }
	iv_ruleIsSubClass=ruleIsSubClass
	{ $current=$iv_ruleIsSubClass.current; }
	EOF;

// Rule IsSubClass
ruleIsSubClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsSubClassAccess().getIsSubClassAction_0(),
					$current);
			}
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getIsSubClassAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are'
			{
				newLeafNode(otherlv_2, grammarAccess.getIsSubClassAccess().getAreKeyword_1_1());
			}
		)
		(
			(
				lv_no_3_0='not'
				{
					newLeafNode(lv_no_3_0, grammarAccess.getIsSubClassAccess().getNoNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsSubClassRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_4='subclass'
		{
			newLeafNode(otherlv_4, grammarAccess.getIsSubClassAccess().getSubclassKeyword_3());
		}
		(
			otherlv_5='of'
			{
				newLeafNode(otherlv_5, grammarAccess.getIsSubClassAccess().getOfKeyword_4_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getIsSubClassAccess().getOfStringPropertyParserRuleCall_4_1_0());
					}
					lv_of_6_0=ruleStringProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getIsSubClassRule());
						}
						set(
							$current,
							"of",
							lv_of_6_0,
							"es.uam.sara.tfg.dsl.JRules.StringProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleImplements
entryRuleImplements returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImplementsRule()); }
	iv_ruleImplements=ruleImplements
	{ $current=$iv_ruleImplements.current; }
	EOF;

// Rule Implements
ruleImplements returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_no_0_0='do'
						{
							newLeafNode(lv_no_0_0, grammarAccess.getImplementsAccess().getNoDoKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImplementsRule());
							}
							setWithLastConsumed($current, "no", true, "do");
						}
					)
				)
				otherlv_1='not'
				{
					newLeafNode(otherlv_1, grammarAccess.getImplementsAccess().getNotKeyword_0_0_1());
				}
			)
			    |
			(
				(
					lv_no_2_0='don\'t'
					{
						newLeafNode(lv_no_2_0, grammarAccess.getImplementsAccess().getNoDonTKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImplementsRule());
						}
						setWithLastConsumed($current, "no", true, "don\'t");
					}
				)
			)
			    |
			(
				(
					(
						lv_no_3_0='does'
						{
							newLeafNode(lv_no_3_0, grammarAccess.getImplementsAccess().getNoDoesKeyword_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getImplementsRule());
							}
							setWithLastConsumed($current, "no", true, "does");
						}
					)
				)
				otherlv_4='not'
				{
					newLeafNode(otherlv_4, grammarAccess.getImplementsAccess().getNotKeyword_0_2_1());
				}
			)
			    |
			(
				(
					lv_no_5_0='doesn\'t'
					{
						newLeafNode(lv_no_5_0, grammarAccess.getImplementsAccess().getNoDoesnTKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getImplementsRule());
						}
						setWithLastConsumed($current, "no", true, "doesn\'t");
					}
				)
			)
		)?
		otherlv_6='implements'
		{
			newLeafNode(otherlv_6, grammarAccess.getImplementsAccess().getImplementsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImplementsAccess().getValoresRangoNamesParserRuleCall_2_0());
				}
				lv_valores_7_0=ruleRangoNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImplementsRule());
					}
					set(
						$current,
						"valores",
						lv_valores_7_0,
						"es.uam.sara.tfg.dsl.JRules.RangoNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleExtends
entryRuleExtends returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getExtendsRule()); }
	iv_ruleExtends=ruleExtends
	{ $current=$iv_ruleExtends.current; }
	EOF;

// Rule Extends
ruleExtends returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					(
						lv_no_0_0='do'
						{
							newLeafNode(lv_no_0_0, grammarAccess.getExtendsAccess().getNoDoKeyword_0_0_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExtendsRule());
							}
							setWithLastConsumed($current, "no", true, "do");
						}
					)
				)
				otherlv_1='not'
				{
					newLeafNode(otherlv_1, grammarAccess.getExtendsAccess().getNotKeyword_0_0_1());
				}
			)
			    |
			(
				(
					lv_no_2_0='don\'t'
					{
						newLeafNode(lv_no_2_0, grammarAccess.getExtendsAccess().getNoDonTKeyword_0_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtendsRule());
						}
						setWithLastConsumed($current, "no", true, "don\'t");
					}
				)
			)
			    |
			(
				(
					(
						lv_no_3_0='does'
						{
							newLeafNode(lv_no_3_0, grammarAccess.getExtendsAccess().getNoDoesKeyword_0_2_0_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getExtendsRule());
							}
							setWithLastConsumed($current, "no", true, "does");
						}
					)
				)
				otherlv_4='not'
				{
					newLeafNode(otherlv_4, grammarAccess.getExtendsAccess().getNotKeyword_0_2_1());
				}
			)
			    |
			(
				(
					lv_no_5_0='doesn\'t'
					{
						newLeafNode(lv_no_5_0, grammarAccess.getExtendsAccess().getNoDoesnTKeyword_0_3_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getExtendsRule());
						}
						setWithLastConsumed($current, "no", true, "doesn\'t");
					}
				)
			)
		)?
		otherlv_6='extends'
		{
			newLeafNode(otherlv_6, grammarAccess.getExtendsAccess().getExtendsKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getExtendsAccess().getValoresRangoNamesParserRuleCall_2_0());
				}
				lv_valores_7_0=ruleRangoNames
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getExtendsRule());
					}
					set(
						$current,
						"valores",
						lv_valores_7_0,
						"es.uam.sara.tfg.dsl.JRules.RangoNames");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleTamanio
entryRuleTamanio returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTamanioRule()); }
	iv_ruleTamanio=ruleTamanio
	{ $current=$iv_ruleTamanio.current; }
	EOF;

// Rule Tamanio
ruleTamanio returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='size'
		{
			newLeafNode(otherlv_0, grammarAccess.getTamanioAccess().getSizeKeyword_0());
		}
		(
			(
				(
					otherlv_1='='
					{
						newLeafNode(otherlv_1, grammarAccess.getTamanioAccess().getEqualsSignKeyword_1_0_0_0());
					}
					    |
					(
						(
							lv_no_2_0='<>'
							{
								newLeafNode(lv_no_2_0, grammarAccess.getTamanioAccess().getNoLessThanSignGreaterThanSignKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getTamanioRule());
								}
								setWithLastConsumed($current, "no", true, "<>");
							}
						)
					)
				)
				(
					(
						{
							newCompositeNode(grammarAccess.getTamanioAccess().getExactEIntParserRuleCall_1_0_1_0());
						}
						lv_exact_3_0=ruleEInt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTamanioRule());
							}
							set(
								$current,
								"exact",
								lv_exact_3_0,
								"es.uam.sara.tfg.dsl.JRules.EInt");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='['
				{
					newLeafNode(otherlv_4, grammarAccess.getTamanioAccess().getLeftSquareBracketKeyword_1_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTamanioAccess().getMinEIntParserRuleCall_1_1_1_0());
						}
						lv_min_5_0=ruleEInt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTamanioRule());
							}
							set(
								$current,
								"min",
								lv_min_5_0,
								"es.uam.sara.tfg.dsl.JRules.EInt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_6='..'
				{
					newLeafNode(otherlv_6, grammarAccess.getTamanioAccess().getFullStopFullStopKeyword_1_1_2());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getTamanioAccess().getMaxEIntParserRuleCall_1_1_3_0_0());
							}
							lv_max_7_0=ruleEInt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getTamanioRule());
								}
								set(
									$current,
									"max",
									lv_max_7_0,
									"es.uam.sara.tfg.dsl.JRules.EInt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					otherlv_8='*'
					{
						newLeafNode(otherlv_8, grammarAccess.getTamanioAccess().getAsteriskKeyword_1_1_3_1());
					}
				)
				otherlv_9=']'
				{
					newLeafNode(otherlv_9, grammarAccess.getTamanioAccess().getRightSquareBracketKeyword_1_1_4());
				}
			)
		)
	)
;

// Entry rule entryRuleParameter
entryRuleParameter returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getParameterRule()); }
	iv_ruleParameter=ruleParameter
	{ $current=$iv_ruleParameter.current; }
	EOF;

// Rule Parameter
ruleParameter returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getParameterAccess().getParameterAction_0(),
					$current);
			}
		)
		otherlv_1='parameters'
		{
			newLeafNode(otherlv_1, grammarAccess.getParameterAccess().getParametersKeyword_1());
		}
		(
			(
				otherlv_2='size'
				{
					newLeafNode(otherlv_2, grammarAccess.getParameterAccess().getSizeKeyword_2_0_0());
				}
				(
					(
						otherlv_3='='
						{
							newLeafNode(otherlv_3, grammarAccess.getParameterAccess().getEqualsSignKeyword_2_0_1_0_0());
						}
						    |
						(
							(
								lv_no_4_0='<>'
								{
									newLeafNode(lv_no_4_0, grammarAccess.getParameterAccess().getNoLessThanSignGreaterThanSignKeyword_2_0_1_0_1_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getParameterRule());
									}
									setWithLastConsumed($current, "no", true, "<>");
								}
							)
						)
					)
					(
						(
							{
								newCompositeNode(grammarAccess.getParameterAccess().getExactEIntParserRuleCall_2_0_1_1_0());
							}
							lv_exact_5_0=ruleEInt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getParameterRule());
								}
								set(
									$current,
									"exact",
									lv_exact_5_0,
									"es.uam.sara.tfg.dsl.JRules.EInt");
								afterParserOrEnumRuleCall();
							}
						)
					)
				)
			)
			    |
			(
				otherlv_6='['
				{
					newLeafNode(otherlv_6, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterAccess().getMinEIntParserRuleCall_2_1_1_0());
						}
						lv_min_7_0=ruleEInt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							set(
								$current,
								"min",
								lv_min_7_0,
								"es.uam.sara.tfg.dsl.JRules.EInt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_8='..'
				{
					newLeafNode(otherlv_8, grammarAccess.getParameterAccess().getFullStopFullStopKeyword_2_1_2());
				}
				(
					(
						(
							{
								newCompositeNode(grammarAccess.getParameterAccess().getMaxEIntParserRuleCall_2_1_3_0_0());
							}
							lv_max_9_0=ruleEInt
							{
								if ($current==null) {
									$current = createModelElementForParent(grammarAccess.getParameterRule());
								}
								set(
									$current,
									"max",
									lv_max_9_0,
									"es.uam.sara.tfg.dsl.JRules.EInt");
								afterParserOrEnumRuleCall();
							}
						)
					)
					    |
					otherlv_10='*'
					{
						newLeafNode(otherlv_10, grammarAccess.getParameterAccess().getAsteriskKeyword_2_1_3_1());
					}
				)
				otherlv_11=']'
				{
					newLeafNode(otherlv_11, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_2_1_4());
				}
			)
		)?
		(
			otherlv_12='types'
			{
				newLeafNode(otherlv_12, grammarAccess.getParameterAccess().getTypesKeyword_3_0());
			}
			otherlv_13='='
			{
				newLeafNode(otherlv_13, grammarAccess.getParameterAccess().getEqualsSignKeyword_3_1());
			}
			otherlv_14='['
			{
				newLeafNode(otherlv_14, grammarAccess.getParameterAccess().getLeftSquareBracketKeyword_3_2());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getParameterAccess().getTypesTypePropertyParserRuleCall_3_3_0());
					}
					lv_types_15_0=ruleTypeProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getParameterRule());
						}
						add(
							$current,
							"types",
							lv_types_15_0,
							"es.uam.sara.tfg.dsl.JRules.TypeProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_16=','
				{
					newLeafNode(otherlv_16, grammarAccess.getParameterAccess().getCommaKeyword_3_4_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getParameterAccess().getTypesTypePropertyParserRuleCall_3_4_1_0());
						}
						lv_types_17_0=ruleTypeProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getParameterRule());
							}
							add(
								$current,
								"types",
								lv_types_17_0,
								"es.uam.sara.tfg.dsl.JRules.TypeProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_18=']'
			{
				newLeafNode(otherlv_18, grammarAccess.getParameterAccess().getRightSquareBracketKeyword_3_5());
			}
		)?
	)
;

// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	iv_ruleConstructor=ruleConstructor
	{ $current=$iv_ruleConstructor.current; }
	EOF;

// Rule Constructor
ruleConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getConstructorAccess().getConstructorAction_0(),
					$current);
			}
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are'
			{
				newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getAreKeyword_1_1());
			}
		)
		(
			(
				lv_no_3_0='not'
				{
					newLeafNode(lv_no_3_0, grammarAccess.getConstructorAccess().getNoNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstructorRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_4='constructor'
		{
			newLeafNode(otherlv_4, grammarAccess.getConstructorAccess().getConstructorKeyword_3());
		}
	)
;

// Entry rule entryRuleReturn
entryRuleReturn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getReturnRule()); }
	iv_ruleReturn=ruleReturn
	{ $current=$iv_ruleReturn.current; }
	EOF;

// Rule Return
ruleReturn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='return'
		{
			newLeafNode(otherlv_0, grammarAccess.getReturnAccess().getReturnKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getReturnAccess().getTypeKeyword_1());
		}
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getReturnAccess().getEqualsSignKeyword_2_0());
			}
			    |
			(
				(
					lv_no_3_0='<>'
					{
						newLeafNode(lv_no_3_0, grammarAccess.getReturnAccess().getNoLessThanSignGreaterThanSignKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getReturnRule());
						}
						setWithLastConsumed($current, "no", true, "<>");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getReturnAccess().getTypeTypePropertyParserRuleCall_3_0());
				}
				lv_type_4_0=ruleTypeProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getReturnRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"es.uam.sara.tfg.dsl.JRules.TypeProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleAttributeType
entryRuleAttributeType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAttributeTypeRule()); }
	iv_ruleAttributeType=ruleAttributeType
	{ $current=$iv_ruleAttributeType.current; }
	EOF;

// Rule AttributeType
ruleAttributeType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='type'
		{
			newLeafNode(otherlv_0, grammarAccess.getAttributeTypeAccess().getTypeKeyword_0());
		}
		(
			otherlv_1='='
			{
				newLeafNode(otherlv_1, grammarAccess.getAttributeTypeAccess().getEqualsSignKeyword_1_0());
			}
			    |
			(
				(
					lv_no_2_0='<>'
					{
						newLeafNode(lv_no_2_0, grammarAccess.getAttributeTypeAccess().getNoLessThanSignGreaterThanSignKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getAttributeTypeRule());
						}
						setWithLastConsumed($current, "no", true, "<>");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getAttributeTypeAccess().getTypeTypePropertyParserRuleCall_2_0());
				}
				lv_type_3_0=ruleTypeProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAttributeTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"es.uam.sara.tfg.dsl.JRules.TypeProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleInitialize
entryRuleInitialize returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getInitializeRule()); }
	iv_ruleInitialize=ruleInitialize
	{ $current=$iv_ruleInitialize.current; }
	EOF;

// Rule Initialize
ruleInitialize returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getInitializeAccess().getInitializeAction_0(),
					$current);
			}
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getInitializeAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are'
			{
				newLeafNode(otherlv_2, grammarAccess.getInitializeAccess().getAreKeyword_1_1());
			}
		)
		(
			(
				lv_no_3_0='not'
				{
					newLeafNode(lv_no_3_0, grammarAccess.getInitializeAccess().getNoNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getInitializeRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_4='initialize'
		{
			newLeafNode(otherlv_4, grammarAccess.getInitializeAccess().getInitializeKeyword_3());
		}
	)
;

// Entry rule entryRuleEmpty
entryRuleEmpty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getEmptyRule()); }
	iv_ruleEmpty=ruleEmpty
	{ $current=$iv_ruleEmpty.current; }
	EOF;

// Rule Empty
ruleEmpty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getEmptyAccess().getEmptyAction_0(),
					$current);
			}
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getEmptyAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are'
			{
				newLeafNode(otherlv_2, grammarAccess.getEmptyAccess().getAreKeyword_1_1());
			}
		)
		(
			(
				lv_no_3_0='not'
				{
					newLeafNode(lv_no_3_0, grammarAccess.getEmptyAccess().getNoNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getEmptyRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_4='empty'
		{
			newLeafNode(otherlv_4, grammarAccess.getEmptyAccess().getEmptyKeyword_3());
		}
	)
;

// Entry rule entryRuleIsGeneric
entryRuleIsGeneric returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsGenericRule()); }
	iv_ruleIsGeneric=ruleIsGeneric
	{ $current=$iv_ruleIsGeneric.current; }
	EOF;

// Rule IsGeneric
ruleIsGeneric returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsGenericAccess().getIsGenericAction_0(),
					$current);
			}
		)
		(
			otherlv_1='is'
			{
				newLeafNode(otherlv_1, grammarAccess.getIsGenericAccess().getIsKeyword_1_0());
			}
			    |
			otherlv_2='are'
			{
				newLeafNode(otherlv_2, grammarAccess.getIsGenericAccess().getAreKeyword_1_1());
			}
		)
		(
			(
				lv_no_3_0='not'
				{
					newLeafNode(lv_no_3_0, grammarAccess.getIsGenericAccess().getNoNotKeyword_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIsGenericRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_4='generic'
		{
			newLeafNode(otherlv_4, grammarAccess.getIsGenericAccess().getGenericKeyword_3());
		}
	)
;

// Entry rule entryRuleNameOperation
entryRuleNameOperation returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameOperationRule()); }
	iv_ruleNameOperation=ruleNameOperation
	{ $current=$iv_ruleNameOperation.current; }
	EOF;

// Rule NameOperation
ruleNameOperation returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getNameOperationAccess().getNameKeyword_0());
		}
		(
			(
				(
					(
						(
							lv_no_1_0='does'
							{
								newLeafNode(lv_no_1_0, grammarAccess.getNameOperationAccess().getNoDoesKeyword_1_0_0_0_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getNameOperationRule());
								}
								setWithLastConsumed($current, "no", true, "does");
							}
						)
					)
					otherlv_2='not'
					{
						newLeafNode(otherlv_2, grammarAccess.getNameOperationAccess().getNotKeyword_1_0_0_1());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getNameOperationAccess().getOperatorNameOperatorEnumRuleCall_1_0_1_0());
						}
						lv_operator_3_0=ruleNameOperator
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getNameOperationRule());
							}
							set(
								$current,
								"operator",
								lv_operator_3_0,
								"es.uam.sara.tfg.dsl.JRules.NameOperator");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)
			    |
			(
				otherlv_4='='
				{
					newLeafNode(otherlv_4, grammarAccess.getNameOperationAccess().getEqualsSignKeyword_1_1_0());
				}
				    |
				(
					(
						lv_no_5_0='<>'
						{
							newLeafNode(lv_no_5_0, grammarAccess.getNameOperationAccess().getNoLessThanSignGreaterThanSignKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getNameOperationRule());
							}
							setWithLastConsumed($current, "no", true, "<>");
						}
					)
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNameOperationAccess().getNameStringPropertyParserRuleCall_2_0());
				}
				lv_name_6_0=ruleStringProperty
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameOperationRule());
					}
					set(
						$current,
						"name",
						lv_name_6_0,
						"es.uam.sara.tfg.dsl.JRules.StringProperty");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7=','
			{
				newLeafNode(otherlv_7, grammarAccess.getNameOperationAccess().getCommaKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getNameOperationAccess().getLanguageLanguageEnumRuleCall_3_1_0());
					}
					lv_Language_8_0=ruleLanguage
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getNameOperationRule());
						}
						set(
							$current,
							"Language",
							lv_Language_8_0,
							"es.uam.sara.tfg.dsl.JRules.Language");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleNameType
entryRuleNameType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getNameTypeRule()); }
	iv_ruleNameType=ruleNameType
	{ $current=$iv_ruleNameType.current; }
	EOF;

// Rule NameType
ruleNameType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='name'
		{
			newLeafNode(otherlv_0, grammarAccess.getNameTypeAccess().getNameKeyword_0());
		}
		otherlv_1='type'
		{
			newLeafNode(otherlv_1, grammarAccess.getNameTypeAccess().getTypeKeyword_1());
		}
		(
			otherlv_2='='
			{
				newLeafNode(otherlv_2, grammarAccess.getNameTypeAccess().getEqualsSignKeyword_2_0());
			}
			    |
			(
				(
					lv_no_3_0='<>'
					{
						newLeafNode(lv_no_3_0, grammarAccess.getNameTypeAccess().getNoLessThanSignGreaterThanSignKeyword_2_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getNameTypeRule());
						}
						setWithLastConsumed($current, "no", true, "<>");
					}
				)
			)
		)
		(
			(
				{
					newCompositeNode(grammarAccess.getNameTypeAccess().getTypeNameCheckEnumRuleCall_3_0());
				}
				lv_type_4_0=ruleNameCheck
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getNameTypeRule());
					}
					set(
						$current,
						"type",
						lv_type_4_0,
						"es.uam.sara.tfg.dsl.JRules.NameCheck");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleJavaDoc
entryRuleJavaDoc returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJavaDocRule()); }
	iv_ruleJavaDoc=ruleJavaDoc
	{ $current=$iv_ruleJavaDoc.current; }
	EOF;

// Rule JavaDoc
ruleJavaDoc returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getJavaDocAccess().getJavaDocAction_0(),
					$current);
			}
		)
		(
			(
				lv_no_1_0='no'
				{
					newLeafNode(lv_no_1_0, grammarAccess.getJavaDocAccess().getNoNoKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "no", true, "no");
				}
			)
		)?
		otherlv_2='JavaDoc'
		{
			newLeafNode(otherlv_2, grammarAccess.getJavaDocAccess().getJavaDocKeyword_2());
		}
		(
			(
				lv_author_3_0='@author'
				{
					newLeafNode(lv_author_3_0, grammarAccess.getJavaDocAccess().getAuthorAuthorKeyword_3_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "author", true, "@author");
				}
			)
		)?
		(
			(
				lv_parameter_4_0='@parameter'
				{
					newLeafNode(lv_parameter_4_0, grammarAccess.getJavaDocAccess().getParameterParameterKeyword_4_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "parameter", true, "@parameter");
				}
			)
		)?
		(
			(
				lv_return_5_0='@return'
				{
					newLeafNode(lv_return_5_0, grammarAccess.getJavaDocAccess().getReturnReturnKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "return", true, "@return");
				}
			)
		)?
		(
			(
				lv_version_6_0='@version'
				{
					newLeafNode(lv_version_6_0, grammarAccess.getJavaDocAccess().getVersionVersionKeyword_6_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "version", true, "@version");
				}
			)
		)?
		(
			(
				lv_throws_7_0='@throws'
				{
					newLeafNode(lv_throws_7_0, grammarAccess.getJavaDocAccess().getThrowsThrowsKeyword_7_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "throws", true, "@throws");
				}
			)
		)?
		(
			(
				lv_see_8_0='@see'
				{
					newLeafNode(lv_see_8_0, grammarAccess.getJavaDocAccess().getSeeSeeKeyword_8_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaDocRule());
					}
					setWithLastConsumed($current, "see", true, "@see");
				}
			)
		)?
	)
;

// Entry rule entryRuleContains
entryRuleContains returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getContainsRule()); }
	iv_ruleContains=ruleContains
	{ $current=$iv_ruleContains.current; }
	EOF;

// Rule Contains
ruleContains returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getContainsAccess().getContainsAction_0(),
					$current);
			}
		)
		(
			(
				(
					(
						(
							(
								lv_no_1_0='do'
								{
									newLeafNode(lv_no_1_0, grammarAccess.getContainsAccess().getNoDoKeyword_1_0_0_0_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getContainsRule());
									}
									setWithLastConsumed($current, "no", true, "do");
								}
							)
						)
						otherlv_2='not'
						{
							newLeafNode(otherlv_2, grammarAccess.getContainsAccess().getNotKeyword_1_0_0_0_1());
						}
					)
					    |
					(
						(
							lv_no_3_0='don\'t'
							{
								newLeafNode(lv_no_3_0, grammarAccess.getContainsAccess().getNoDonTKeyword_1_0_0_1_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getContainsRule());
								}
								setWithLastConsumed($current, "no", true, "don\'t");
							}
						)
					)
					    |
					(
						(
							(
								lv_no_4_0='does'
								{
									newLeafNode(lv_no_4_0, grammarAccess.getContainsAccess().getNoDoesKeyword_1_0_0_2_0_0());
								}
								{
									if ($current==null) {
										$current = createModelElement(grammarAccess.getContainsRule());
									}
									setWithLastConsumed($current, "no", true, "does");
								}
							)
						)
						otherlv_5='not'
						{
							newLeafNode(otherlv_5, grammarAccess.getContainsAccess().getNotKeyword_1_0_0_2_1());
						}
					)
					    |
					(
						(
							lv_no_6_0='doesn\'t'
							{
								newLeafNode(lv_no_6_0, grammarAccess.getContainsAccess().getNoDoesnTKeyword_1_0_0_3_0());
							}
							{
								if ($current==null) {
									$current = createModelElement(grammarAccess.getContainsRule());
								}
								setWithLastConsumed($current, "no", true, "doesn\'t");
							}
						)
					)
				)?
				otherlv_7='have'
				{
					newLeafNode(otherlv_7, grammarAccess.getContainsAccess().getHaveKeyword_1_0_1());
				}
			)
			    |
			(
				(
					lv_no_8_0='haven\'t'
					{
						newLeafNode(lv_no_8_0, grammarAccess.getContainsAccess().getNoHavenTKeyword_1_1_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getContainsRule());
						}
						setWithLastConsumed($current, "no", true, "haven\'t");
					}
				)
			)
		)
		otherlv_9='{'
		{
			newLeafNode(otherlv_9, grammarAccess.getContainsAccess().getLeftCurlyBracketKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getContainsAccess().getRuleRuleParserRuleCall_3_0());
				}
				lv_rule_10_0=ruleRule
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getContainsRule());
					}
					set(
						$current,
						"rule",
						lv_rule_10_0,
						"es.uam.sara.tfg.dsl.JRules.Rule");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_11='}'
		{
			newLeafNode(otherlv_11, grammarAccess.getContainsAccess().getRightCurlyBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleModifiers
entryRuleModifiers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getModifiersRule()); }
	iv_ruleModifiers=ruleModifiers
	{ $current=$iv_ruleModifiers.current; }
	EOF;

// Rule Modifiers
ruleModifiers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			otherlv_0='is'
			{
				newLeafNode(otherlv_0, grammarAccess.getModifiersAccess().getIsKeyword_0_0());
			}
			    |
			otherlv_1='are'
			{
				newLeafNode(otherlv_1, grammarAccess.getModifiersAccess().getAreKeyword_0_1());
			}
		)
		(
			(
				lv_no_2_0='not'
				{
					newLeafNode(lv_no_2_0, grammarAccess.getModifiersAccess().getNoNotKeyword_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getModifiersRule());
					}
					setWithLastConsumed($current, "no", true, "not");
				}
			)
		)?
		otherlv_3='modified'
		{
			newLeafNode(otherlv_3, grammarAccess.getModifiersAccess().getModifiedKeyword_2());
		}
		otherlv_4='with'
		{
			newLeafNode(otherlv_4, grammarAccess.getModifiersAccess().getWithKeyword_3());
		}
		otherlv_5='['
		{
			newLeafNode(otherlv_5, grammarAccess.getModifiersAccess().getLeftSquareBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_5_0());
				}
				lv_blend_6_0=ruleBlendModifiers
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getModifiersRule());
					}
					add(
						$current,
						"blend",
						lv_blend_6_0,
						"es.uam.sara.tfg.dsl.JRules.BlendModifiers");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_7='or'
			{
				newLeafNode(otherlv_7, grammarAccess.getModifiersAccess().getOrKeyword_6_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getModifiersAccess().getBlendBlendModifiersParserRuleCall_6_1_0());
					}
					lv_blend_8_0=ruleBlendModifiers
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getModifiersRule());
						}
						add(
							$current,
							"blend",
							lv_blend_8_0,
							"es.uam.sara.tfg.dsl.JRules.BlendModifiers");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)*
		otherlv_9=']'
		{
			newLeafNode(otherlv_9, grammarAccess.getModifiersAccess().getRightSquareBracketKeyword_7());
		}
	)
;

// Entry rule entryRuleRangoNames
entryRuleRangoNames returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getRangoNamesRule()); }
	iv_ruleRangoNames=ruleRangoNames
	{ $current=$iv_ruleRangoNames.current; }
	EOF;

// Rule RangoNames
ruleRangoNames returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getRangoNamesAccess().getRangoNamesAction_0(),
					$current);
			}
		)
		(
			otherlv_1='['
			{
				newLeafNode(otherlv_1, grammarAccess.getRangoNamesAccess().getLeftSquareBracketKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangoNamesAccess().getMinEIntParserRuleCall_1_1_0());
					}
					lv_min_2_0=ruleEInt
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangoNamesRule());
						}
						set(
							$current,
							"min",
							lv_min_2_0,
							"es.uam.sara.tfg.dsl.JRules.EInt");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_3='..'
			{
				newLeafNode(otherlv_3, grammarAccess.getRangoNamesAccess().getFullStopFullStopKeyword_1_2());
			}
			(
				(
					(
						{
							newCompositeNode(grammarAccess.getRangoNamesAccess().getMaxEIntParserRuleCall_1_3_0_0());
						}
						lv_max_4_0=ruleEInt
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangoNamesRule());
							}
							set(
								$current,
								"max",
								lv_max_4_0,
								"es.uam.sara.tfg.dsl.JRules.EInt");
							afterParserOrEnumRuleCall();
						}
					)
				)
				    |
				otherlv_5='*'
				{
					newLeafNode(otherlv_5, grammarAccess.getRangoNamesAccess().getAsteriskKeyword_1_3_1());
				}
			)
			otherlv_6=']'
			{
				newLeafNode(otherlv_6, grammarAccess.getRangoNamesAccess().getRightSquareBracketKeyword_1_4());
			}
		)?
		(
			otherlv_7='types'
			{
				newLeafNode(otherlv_7, grammarAccess.getRangoNamesAccess().getTypesKeyword_2_0());
			}
			otherlv_8='{'
			{
				newLeafNode(otherlv_8, grammarAccess.getRangoNamesAccess().getLeftCurlyBracketKeyword_2_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getRangoNamesAccess().getTypesStringPropertyParserRuleCall_2_2_0());
					}
					lv_types_9_0=ruleStringProperty
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getRangoNamesRule());
						}
						add(
							$current,
							"types",
							lv_types_9_0,
							"es.uam.sara.tfg.dsl.JRules.StringProperty");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_10=','
				{
					newLeafNode(otherlv_10, grammarAccess.getRangoNamesAccess().getCommaKeyword_2_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getRangoNamesAccess().getTypesStringPropertyParserRuleCall_2_3_1_0());
						}
						lv_types_11_0=ruleStringProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getRangoNamesRule());
							}
							add(
								$current,
								"types",
								lv_types_11_0,
								"es.uam.sara.tfg.dsl.JRules.StringProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
			otherlv_12='}'
			{
				newLeafNode(otherlv_12, grammarAccess.getRangoNamesAccess().getRightCurlyBracketKeyword_2_4());
			}
		)?
	)
;

// Entry rule entryRuleStringProperty
entryRuleStringProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringPropertyRule()); }
	iv_ruleStringProperty=ruleStringProperty
	{ $current=$iv_ruleStringProperty.current; }
	EOF;

// Rule StringProperty
ruleStringProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStringPropertyAccess().getStringValueParserRuleCall_0());
		}
		this_StringValue_0=ruleStringValue
		{
			$current = $this_StringValue_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStringPropertyAccess().getStringVariableParserRuleCall_1());
		}
		this_StringVariable_1=ruleStringVariable
		{
			$current = $this_StringVariable_1.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleStringValue
entryRuleStringValue returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringValueRule()); }
	iv_ruleStringValue=ruleStringValue
	{ $current=$iv_ruleStringValue.current; }
	EOF;

// Rule StringValue
ruleStringValue returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				newCompositeNode(grammarAccess.getStringValueAccess().getValueEStringParserRuleCall_0());
			}
			lv_value_0_0=ruleEString
			{
				if ($current==null) {
					$current = createModelElementForParent(grammarAccess.getStringValueRule());
				}
				set(
					$current,
					"value",
					lv_value_0_0,
					"es.uam.sara.tfg.dsl.JRules.EString");
				afterParserOrEnumRuleCall();
			}
		)
	)
;

// Entry rule entryRuleStringVariable
entryRuleStringVariable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStringVariableRule()); }
	iv_ruleStringVariable=ruleStringVariable
	{ $current=$iv_ruleStringVariable.current; }
	EOF;

// Rule StringVariable
ruleStringVariable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getStringVariableAccess().getVariableVariableSubtypeParserRuleCall_0_0());
				}
				lv_variable_0_0=ruleVariableSubtype
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringVariableRule());
					}
					set(
						$current,
						"variable",
						lv_variable_0_0,
						"es.uam.sara.tfg.dsl.JRules.VariableSubtype");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='.'
		{
			newLeafNode(otherlv_1, grammarAccess.getStringVariableAccess().getFullStopKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getStringVariableAccess().getStringsElementStringEnumRuleCall_2_0());
				}
				lv_strings_2_0=ruleElementString
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getStringVariableRule());
					}
					set(
						$current,
						"strings",
						lv_strings_2_0,
						"es.uam.sara.tfg.dsl.JRules.ElementString");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleVariableSubtype
entryRuleVariableSubtype returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getVariableSubtypeRule()); }
	iv_ruleVariableSubtype=ruleVariableSubtype
	{ $current=$iv_ruleVariableSubtype.current; }
	EOF;

// Rule VariableSubtype
ruleVariableSubtype returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getVariableSubtypeRule());
					}
				}
				{
					newCompositeNode(grammarAccess.getVariableSubtypeAccess().getVariableVariableCrossReference_0_0());
				}
				ruleEString
				{
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_1='.'
			{
				newLeafNode(otherlv_1, grammarAccess.getVariableSubtypeAccess().getFullStopKeyword_1_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getVariableSubtypeAccess().getSubtypeElementEnumRuleCall_1_1_0());
					}
					lv_subtype_2_0=ruleElement
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getVariableSubtypeRule());
						}
						set(
							$current,
							"subtype",
							lv_subtype_2_0,
							"es.uam.sara.tfg.dsl.JRules.Element");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
	)
;

// Entry rule entryRuleTypeProperty
entryRuleTypeProperty returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypePropertyRule()); }
	iv_ruleTypeProperty=ruleTypeProperty
	{ $current=$iv_ruleTypeProperty.current; }
	EOF;

// Rule TypeProperty
ruleTypeProperty returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getTypePropertyAccess().getStringPropertyParserRuleCall_0());
		}
		this_StringProperty_0=ruleStringProperty
		{
			$current = $this_StringProperty_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypePropertyAccess().getIsPrimitiveFunctionParserRuleCall_1());
		}
		this_isPrimitiveFunction_1=ruleisPrimitiveFunction
		{
			$current = $this_isPrimitiveFunction_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypePropertyAccess().getIsCollectionTypeParserRuleCall_2());
		}
		this_IsCollectionType_2=ruleIsCollectionType
		{
			$current = $this_IsCollectionType_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getTypePropertyAccess().getTypePrimitiveParserRuleCall_3());
		}
		this_TypePrimitive_3=ruleTypePrimitive
		{
			$current = $this_TypePrimitive_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleTypePrimitive
entryRuleTypePrimitive returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTypePrimitiveRule()); }
	iv_ruleTypePrimitive=ruleTypePrimitive
	{ $current=$iv_ruleTypePrimitive.current; }
	EOF;

// Rule TypePrimitive
ruleTypePrimitive returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='Primitive.'
		{
			newLeafNode(otherlv_0, grammarAccess.getTypePrimitiveAccess().getPrimitiveKeyword_0());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTypePrimitiveAccess().getTypePrimitivePrimitiveEnumRuleCall_1_0());
				}
				lv_typePrimitive_1_0=rulePrimitive
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTypePrimitiveRule());
					}
					set(
						$current,
						"typePrimitive",
						lv_typePrimitive_1_0,
						"es.uam.sara.tfg.dsl.JRules.Primitive");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleisPrimitiveFunction
entryRuleisPrimitiveFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsPrimitiveFunctionRule()); }
	iv_ruleisPrimitiveFunction=ruleisPrimitiveFunction
	{ $current=$iv_ruleisPrimitiveFunction.current; }
	EOF;

// Rule isPrimitiveFunction
ruleisPrimitiveFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsPrimitiveFunctionAccess().getIsPrimitiveFuntionAction_0(),
					$current);
			}
		)
		otherlv_1='isPrimitive'
		{
			newLeafNode(otherlv_1, grammarAccess.getIsPrimitiveFunctionAccess().getIsPrimitiveKeyword_1());
		}
		otherlv_2='()'
		{
			newLeafNode(otherlv_2, grammarAccess.getIsPrimitiveFunctionAccess().getLeftParenthesisRightParenthesisKeyword_2());
		}
	)
;

// Entry rule entryRuleIsCollectionType
entryRuleIsCollectionType returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIsCollectionTypeRule()); }
	iv_ruleIsCollectionType=ruleIsCollectionType
	{ $current=$iv_ruleIsCollectionType.current; }
	EOF;

// Rule IsCollectionType
ruleIsCollectionType returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIsCollectionTypeAccess().getIsCollectionTypeAction_0(),
					$current);
			}
		)
		otherlv_1='isCollection'
		{
			newLeafNode(otherlv_1, grammarAccess.getIsCollectionTypeAccess().getIsCollectionKeyword_1());
		}
		(
			otherlv_2='()'
			{
				newLeafNode(otherlv_2, grammarAccess.getIsCollectionTypeAccess().getLeftParenthesisRightParenthesisKeyword_2_0());
			}
			    |
			(
				otherlv_3='('
				{
					newLeafNode(otherlv_3, grammarAccess.getIsCollectionTypeAccess().getLeftParenthesisKeyword_2_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getIsCollectionTypeAccess().getOfTypePropertyParserRuleCall_2_1_1_0());
						}
						lv_of_4_0=ruleTypeProperty
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getIsCollectionTypeRule());
							}
							set(
								$current,
								"of",
								lv_of_4_0,
								"es.uam.sara.tfg.dsl.JRules.TypeProperty");
							afterParserOrEnumRuleCall();
						}
					)
				)
				otherlv_5=')'
				{
					newLeafNode(otherlv_5, grammarAccess.getIsCollectionTypeAccess().getRightParenthesisKeyword_2_1_2());
				}
			)
		)
	)
;

// Entry rule entryRuleEInt
entryRuleEInt returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEIntRule()); }
	iv_ruleEInt=ruleEInt
	{ $current=$iv_ruleEInt.current.getText(); }
	EOF;

// Rule EInt
ruleEInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			kw='-'
			{
				$current.merge(kw);
				newLeafNode(kw, grammarAccess.getEIntAccess().getHyphenMinusKeyword_0());
			}
		)?
		this_INT_1=RULE_INT
		{
			$current.merge(this_INT_1);
		}
		{
			newLeafNode(this_INT_1, grammarAccess.getEIntAccess().getINTTerminalRuleCall_1());
		}
	)
;

// Entry rule entryRuleBlendModifiers
entryRuleBlendModifiers returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getBlendModifiersRule()); }
	iv_ruleBlendModifiers=ruleBlendModifiers
	{ $current=$iv_ruleBlendModifiers.current; }
	EOF;

// Rule BlendModifiers
ruleBlendModifiers returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getBlendModifiersAccess().getAccessAccessModifierEnumRuleCall_0_0_0());
					}
					lv_access_0_0=ruleAccessModifier
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getBlendModifiersRule());
						}
						set(
							$current,
							"access",
							lv_access_0_0,
							"es.uam.sara.tfg.dsl.JRules.AccessModifier");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_1='and'
				{
					newLeafNode(otherlv_1, grammarAccess.getBlendModifiersAccess().getAndKeyword_0_1_0());
				}
				(
					(
						lv_static_2_0='static'
						{
							newLeafNode(lv_static_2_0, grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_0_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "static", true, "static");
						}
					)
				)
			)?
			(
				otherlv_3='and'
				{
					newLeafNode(otherlv_3, grammarAccess.getBlendModifiersAccess().getAndKeyword_0_2_0());
				}
				(
					(
						lv_final_4_0='final'
						{
							newLeafNode(lv_final_4_0, grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_0_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "final", true, "final");
						}
					)
				)
			)?
			(
				otherlv_5='and'
				{
					newLeafNode(otherlv_5, grammarAccess.getBlendModifiersAccess().getAndKeyword_0_3_0());
				}
				(
					(
						lv_abstract_6_0='abstract'
						{
							newLeafNode(lv_abstract_6_0, grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_0_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)
			)?
			(
				otherlv_7='and'
				{
					newLeafNode(otherlv_7, grammarAccess.getBlendModifiersAccess().getAndKeyword_0_4_0());
				}
				(
					(
						lv_default_8_0='default'
						{
							newLeafNode(lv_default_8_0, grammarAccess.getBlendModifiersAccess().getDefaultDefaultKeyword_0_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "default", true, "default");
						}
					)
				)
			)?
			(
				otherlv_9='and'
				{
					newLeafNode(otherlv_9, grammarAccess.getBlendModifiersAccess().getAndKeyword_0_5_0());
				}
				(
					(
						lv_synchronized_10_0='synchronized'
						{
							newLeafNode(lv_synchronized_10_0, grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_0_5_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "synchronized", true, "synchronized");
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_static_11_0='static'
					{
						newLeafNode(lv_static_11_0, grammarAccess.getBlendModifiersAccess().getStaticStaticKeyword_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlendModifiersRule());
						}
						setWithLastConsumed($current, "static", true, "static");
					}
				)
			)
			(
				otherlv_12='and'
				{
					newLeafNode(otherlv_12, grammarAccess.getBlendModifiersAccess().getAndKeyword_1_1_0());
				}
				(
					(
						lv_final_13_0='final'
						{
							newLeafNode(lv_final_13_0, grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_1_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "final", true, "final");
						}
					)
				)
			)?
			(
				otherlv_14='and'
				{
					newLeafNode(otherlv_14, grammarAccess.getBlendModifiersAccess().getAndKeyword_1_2_0());
				}
				(
					(
						lv_abstract_15_0='abstract'
						{
							newLeafNode(lv_abstract_15_0, grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_1_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)
			)?
			(
				otherlv_16='and'
				{
					newLeafNode(otherlv_16, grammarAccess.getBlendModifiersAccess().getAndKeyword_1_3_0());
				}
				(
					(
						lv_default_17_0='default'
						{
							newLeafNode(lv_default_17_0, grammarAccess.getBlendModifiersAccess().getDefaultDefaultKeyword_1_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "default", true, "default");
						}
					)
				)
			)?
			(
				otherlv_18='and'
				{
					newLeafNode(otherlv_18, grammarAccess.getBlendModifiersAccess().getAndKeyword_1_4_0());
				}
				(
					(
						lv_synchronized_19_0='synchronized'
						{
							newLeafNode(lv_synchronized_19_0, grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_1_4_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "synchronized", true, "synchronized");
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_final_20_0='final'
					{
						newLeafNode(lv_final_20_0, grammarAccess.getBlendModifiersAccess().getFinalFinalKeyword_2_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlendModifiersRule());
						}
						setWithLastConsumed($current, "final", true, "final");
					}
				)
			)
			(
				otherlv_21='and'
				{
					newLeafNode(otherlv_21, grammarAccess.getBlendModifiersAccess().getAndKeyword_2_1_0());
				}
				(
					(
						lv_abstract_22_0='abstract'
						{
							newLeafNode(lv_abstract_22_0, grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_2_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "abstract", true, "abstract");
						}
					)
				)
			)?
			(
				otherlv_23='and'
				{
					newLeafNode(otherlv_23, grammarAccess.getBlendModifiersAccess().getAndKeyword_2_2_0());
				}
				(
					(
						lv_default_24_0='default'
						{
							newLeafNode(lv_default_24_0, grammarAccess.getBlendModifiersAccess().getDefaultDefaultKeyword_2_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "default", true, "default");
						}
					)
				)
			)?
			(
				otherlv_25='and'
				{
					newLeafNode(otherlv_25, grammarAccess.getBlendModifiersAccess().getAndKeyword_2_3_0());
				}
				(
					(
						lv_synchronized_26_0='synchronized'
						{
							newLeafNode(lv_synchronized_26_0, grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_2_3_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "synchronized", true, "synchronized");
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_abstract_27_0='abstract'
					{
						newLeafNode(lv_abstract_27_0, grammarAccess.getBlendModifiersAccess().getAbstractAbstractKeyword_3_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlendModifiersRule());
						}
						setWithLastConsumed($current, "abstract", true, "abstract");
					}
				)
			)
			(
				otherlv_28='and'
				{
					newLeafNode(otherlv_28, grammarAccess.getBlendModifiersAccess().getAndKeyword_3_1_0());
				}
				(
					(
						lv_default_29_0='default'
						{
							newLeafNode(lv_default_29_0, grammarAccess.getBlendModifiersAccess().getDefaultDefaultKeyword_3_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "default", true, "default");
						}
					)
				)
			)?
			(
				otherlv_30='and'
				{
					newLeafNode(otherlv_30, grammarAccess.getBlendModifiersAccess().getAndKeyword_3_2_0());
				}
				(
					(
						lv_synchronized_31_0='synchronized'
						{
							newLeafNode(lv_synchronized_31_0, grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_3_2_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "synchronized", true, "synchronized");
						}
					)
				)
			)?
		)
		    |
		(
			(
				(
					lv_default_32_0='default'
					{
						newLeafNode(lv_default_32_0, grammarAccess.getBlendModifiersAccess().getDefaultDefaultKeyword_4_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getBlendModifiersRule());
						}
						setWithLastConsumed($current, "default", true, "default");
					}
				)
			)
			(
				otherlv_33='and'
				{
					newLeafNode(otherlv_33, grammarAccess.getBlendModifiersAccess().getAndKeyword_4_1_0());
				}
				(
					(
						lv_synchronized_34_0='synchronized'
						{
							newLeafNode(lv_synchronized_34_0, grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_4_1_1_0());
						}
						{
							if ($current==null) {
								$current = createModelElement(grammarAccess.getBlendModifiersRule());
							}
							setWithLastConsumed($current, "synchronized", true, "synchronized");
						}
					)
				)
			)?
		)
		    |
		(
			(
				lv_synchronized_35_0='synchronized'
				{
					newLeafNode(lv_synchronized_35_0, grammarAccess.getBlendModifiersAccess().getSynchronizedSynchronizedKeyword_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getBlendModifiersRule());
					}
					setWithLastConsumed($current, "synchronized", true, "synchronized");
				}
			)
		)
	)
;

// Entry rule entryRuleEString
entryRuleEString returns [String current=null]:
	{ newCompositeNode(grammarAccess.getEStringRule()); }
	iv_ruleEString=ruleEString
	{ $current=$iv_ruleEString.current.getText(); }
	EOF;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		this_STRING_0=RULE_STRING
		{
			$current.merge(this_STRING_0);
		}
		{
			newLeafNode(this_STRING_0, grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0());
		}
		    |
		this_ID_1=RULE_ID
		{
			$current.merge(this_ID_1);
		}
		{
			newLeafNode(this_ID_1, grammarAccess.getEStringAccess().getIDTerminalRuleCall_1());
		}
	)
;

// Rule Element
ruleElement returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Package'
			{
				$current = grammarAccess.getElementAccess().getPackageEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getElementAccess().getPackageEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Class'
			{
				$current = grammarAccess.getElementAccess().getClassEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getElementAccess().getClassEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='Interface'
			{
				$current = grammarAccess.getElementAccess().getInterfaceEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getElementAccess().getInterfaceEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='Enumeration'
			{
				$current = grammarAccess.getElementAccess().getEnumerationEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getElementAccess().getEnumerationEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='Method'
			{
				$current = grammarAccess.getElementAccess().getMethodEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getElementAccess().getMethodEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='Attribute'
			{
				$current = grammarAccess.getElementAccess().getAttributeEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getElementAccess().getAttributeEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='File'
			{
				$current = grammarAccess.getElementAccess().getFileEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getElementAccess().getFileEnumLiteralDeclaration_6());
			}
		)
	)
;

// Rule Primitive
rulePrimitive returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='boolean'
			{
				$current = grammarAccess.getPrimitiveAccess().getBOOLEANEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getPrimitiveAccess().getBOOLEANEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='byte'
			{
				$current = grammarAccess.getPrimitiveAccess().getBYTEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getPrimitiveAccess().getBYTEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='char'
			{
				$current = grammarAccess.getPrimitiveAccess().getCHAREnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getPrimitiveAccess().getCHAREnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='double'
			{
				$current = grammarAccess.getPrimitiveAccess().getDOUBLEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getPrimitiveAccess().getDOUBLEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='float'
			{
				$current = grammarAccess.getPrimitiveAccess().getFLOATEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getPrimitiveAccess().getFLOATEnumLiteralDeclaration_4());
			}
		)
		    |
		(
			enumLiteral_5='int'
			{
				$current = grammarAccess.getPrimitiveAccess().getINTEnumLiteralDeclaration_5().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_5, grammarAccess.getPrimitiveAccess().getINTEnumLiteralDeclaration_5());
			}
		)
		    |
		(
			enumLiteral_6='long'
			{
				$current = grammarAccess.getPrimitiveAccess().getLONGEnumLiteralDeclaration_6().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_6, grammarAccess.getPrimitiveAccess().getLONGEnumLiteralDeclaration_6());
			}
		)
		    |
		(
			enumLiteral_7='short'
			{
				$current = grammarAccess.getPrimitiveAccess().getSHORTEnumLiteralDeclaration_7().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_7, grammarAccess.getPrimitiveAccess().getSHORTEnumLiteralDeclaration_7());
			}
		)
		    |
		(
			enumLiteral_8='String'
			{
				$current = grammarAccess.getPrimitiveAccess().getSTRINGEnumLiteralDeclaration_8().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_8, grammarAccess.getPrimitiveAccess().getSTRINGEnumLiteralDeclaration_8());
			}
		)
	)
;

// Rule NameOperator
ruleNameOperator returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='start '
			{
				$current = grammarAccess.getNameOperatorAccess().getSTARTEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNameOperatorAccess().getSTARTEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='end'
			{
				$current = grammarAccess.getNameOperatorAccess().getENDEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNameOperatorAccess().getENDEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='contain'
			{
				$current = grammarAccess.getNameOperatorAccess().getCONTAINEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNameOperatorAccess().getCONTAINEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='like'
			{
				$current = grammarAccess.getNameOperatorAccess().getLIKEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNameOperatorAccess().getLIKEEnumLiteralDeclaration_3());
			}
		)
	)
;

// Rule ElementString
ruleElementString returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='name'
			{
				$current = grammarAccess.getElementStringAccess().getNameEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getElementStringAccess().getNameEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='type'
			{
				$current = grammarAccess.getElementStringAccess().getTypeEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getElementStringAccess().getTypeEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule Language
ruleLanguage returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='Spanish'
			{
				$current = grammarAccess.getLanguageAccess().getSPANISHEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getLanguageAccess().getSPANISHEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='English'
			{
				$current = grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getLanguageAccess().getENGLISHEnumLiteralDeclaration_1());
			}
		)
	)
;

// Rule NameCheck
ruleNameCheck returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='upper case'
			{
				$current = grammarAccess.getNameCheckAccess().getUPPER_CASEEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getNameCheckAccess().getUPPER_CASEEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='lower case'
			{
				$current = grammarAccess.getNameCheckAccess().getLOWER_CASEEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getNameCheckAccess().getLOWER_CASEEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='upper camel case'
			{
				$current = grammarAccess.getNameCheckAccess().getUPPER_CAMEL_CASEEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getNameCheckAccess().getUPPER_CAMEL_CASEEnumLiteralDeclaration_2());
			}
		)
		    |
		(
			enumLiteral_3='lower camel case'
			{
				$current = grammarAccess.getNameCheckAccess().getLOWER_CAMEL_CASEEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_3, grammarAccess.getNameCheckAccess().getLOWER_CAMEL_CASEEnumLiteralDeclaration_3());
			}
		)
		    |
		(
			enumLiteral_4='start upper case'
			{
				$current = grammarAccess.getNameCheckAccess().getSTART_UPPER_CASEEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_4, grammarAccess.getNameCheckAccess().getSTART_UPPER_CASEEnumLiteralDeclaration_4());
			}
		)
	)
;

// Rule AccessModifier
ruleAccessModifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='public'
			{
				$current = grammarAccess.getAccessModifierAccess().getPublicEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getAccessModifierAccess().getPublicEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='protected'
			{
				$current = grammarAccess.getAccessModifierAccess().getProtectedEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getAccessModifierAccess().getProtectedEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='private'
			{
				$current = grammarAccess.getAccessModifierAccess().getPrivateEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getAccessModifierAccess().getPrivateEnumLiteralDeclaration_2());
			}
		)
	)
;

// Rule Quantifier
ruleQuantifier returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='one'
			{
				$current = grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getQuantifierAccess().getOneEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='exists'
			{
				$current = grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getQuantifierAccess().getExistsEnumLiteralDeclaration_1());
			}
		)
		    |
		(
			enumLiteral_2='all'
			{
				$current = grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_2, grammarAccess.getQuantifierAccess().getAllEnumLiteralDeclaration_2());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
